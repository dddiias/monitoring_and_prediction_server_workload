from aiogram import Router, F
from aiogram.types import CallbackQuery
from aiogram.fsm.context import FSMContext
from handlers.fsm.cpu_limit import CpuLimitForm
from keyboards.inline import get_main_inline_menu, get_settings_menu

router = Router()

@router.callback_query(F.data == "settings")
async def handle_settings(callback: CallbackQuery):
    await callback.message.edit_text(
        "‚öô –ù–∞—Å—Ç—Ä–æ–π–∫–∏:\n\n"
        "–ó–¥–µ—Å—å —Ç—ã –º–æ–∂–µ—à—å –∏–∑–º–µ–Ω–∏—Ç—å –ª–∏–º–∏—Ç—ã, —á–∞—Å—Ç–æ—Ç—É —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –∏ –¥—Ä—É–≥–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã.",
        reply_markup=get_settings_menu()
    )
    await callback.answer()

@router.callback_query(F.data == "set_cpu_limit")
async def set_cpu_limit(callback: CallbackQuery, state: FSMContext):
    await callback.message.edit_text("üß† –í–≤–µ–¥–∏—Ç–µ –ª–∏–º–∏—Ç –ø–æ CPU –≤ –ø—Ä–æ—Ü–µ–Ω—Ç–∞—Ö (–æ—Ç 10 –¥–æ 100):")
    await state.set_state(CpuLimitForm.waiting_for_cpu_limit)
    await callback.answer()
    
@router.callback_query(F.data == "back_to_main")
async def back_to_main(callback: CallbackQuery):
    await callback.message.edit_text(
        "üîô –í–æ–∑–≤—Ä–∞—Ç –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é.",
        reply_markup=get_main_inline_menu()
    )
    await callback.answer()
